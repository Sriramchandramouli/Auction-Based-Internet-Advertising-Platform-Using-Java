/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PublisherRole;

import Business.Organization.PublisherOrganization;
import Business.Publisher.Publisher;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdExchangeRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sriram
 */
public class EnrollAdvertiserJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    PublisherOrganization publisherOrganization;
    UserAccount userAccount;
    Publisher publisher;
    
    public EnrollAdvertiserJPanel(JPanel upc, PublisherOrganization publisherOrganization, UserAccount userAccount, Publisher publisher) {
        initComponents();
        this.userProcessContainer = upc;
        this.publisherOrganization = publisherOrganization;
        this.userAccount = userAccount;
        this.publisher = publisher;
        populateAdvertiserRequestTable();
    }
    
    private void populateAdvertiserRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest wr : publisherOrganization.getWorkQueue().getWorkRequestList()) {
            AdExchangeRequest enrollReq = (AdExchangeRequest) wr;
           Object row[] = new Object[6];
            row[0] = wr;
            row[1] = wr.getSender().getPerson().getFirstName();
            row[2] = (wr.getReceiver() == null) ? ("N/A") : (wr.getReceiver().getPerson().getFirstName());
            row[3] = enrollReq.getPublisher();
            row[4] = wr.getRequestDate();
            row[5] = (wr.getRessolveDate() == null) ? ("N/A") : (wr.getRessolveDate());
            dtm.addRow(row);
                
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Publisher Name", "DateRequested", "DateProcessed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 177, 478, 96));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 323, 108, -1));

        assignJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignJButton.setText("Assign >>");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 323, 138, -1));

        processJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        processJButton.setText("Process >>");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 323, -1, -1));

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshJButton.setText("Refresh >>");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 118, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("ENROLL ADVERTISER PANEL");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 34, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Delete Bid >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 150, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow >= 0) {
            AdExchangeRequest advReq = (AdExchangeRequest)workRequestJTable.getValueAt(selectedRow, 0);
            if(advReq.getPublisher().equals(publisher) && advReq.getReceiver()== null) {
                advReq.setReceiver(userAccount);
                advReq.setStatus("Pending");
                advReq.setMessage("Processing");
                advReq.setEnrollResult("In-Progress");

                populateAdvertiserRequestTable();
                
                JOptionPane.showMessageDialog(null, "The request has been assigned.");
            } else {
                JOptionPane.showMessageDialog(null, "The request does not belong to the Publisher");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a request to Assign");
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        AdExchangeRequest advReq;
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow >= 0) {
            advReq = (AdExchangeRequest)workRequestJTable.getValueAt(selectedRow, 0);
            if(advReq.getReceiver() == null) {
                JOptionPane.showMessageDialog(null, "Please assign the request before processing");
                return;
            }
            if(advReq.getStatus().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "The request has been processed already");
            } else {
                if(advReq.getReceiver()==(userAccount)) {
                    int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to process", "Warning", JOptionPane.YES_NO_OPTION);
                    if (option == JOptionPane.YES_OPTION) {
                        Date date = new Date();
                        advReq.setRessolveDate(date);
                        advReq.setStatus("Completed");
                        advReq.setMessage("Approved");
                        advReq.setEnrollResult("Approved");
                    } else if(option == JOptionPane.NO_OPTION) {
                        Date date = new Date();
                        advReq.setRessolveDate(date);
                        advReq.setStatus("Completed");
                        advReq.setMessage("Not Approved");
                        advReq.setEnrollResult("Incomplete");
                    }
                    
                    populateAdvertiserRequestTable();
                }
                else {
                    JOptionPane.showMessageDialog(null, "You cannot process a request assigned by another user");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a request to process");
        }
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateAdvertiserRequestTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow>=0){
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Warning", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                WorkRequest workRequest  =(WorkRequest)workRequestJTable.getValueAt(selectedRow,0);
                workRequest.getSender().getWorkQueue().deleteWorkRequest(workRequest);
                publisherOrganization.getWorkQueue().deleteWorkRequest(workRequest);
                populateAdvertiserRequestTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Please select an advertisement to delete");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
