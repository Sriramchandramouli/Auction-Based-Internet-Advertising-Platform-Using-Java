/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdmin;

import Business.EcoSystem;
import Business.Network.Network;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sriram
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    
    public ManageNetworkJPanel(JPanel upc, EcoSystem system) {
        initComponents();
        this.userProcessContainer = upc;
        this.system = system;
        populateNetworkTable();
    }
    
    private void populateNetworkTable(){
        DefaultTableModel model = (DefaultTableModel)networkJTable.getModel();
        
        model.setRowCount(0);
        for (Network network : system.getNetworkList()){
            Object[] row = new Object[1];
            row[0] = network;
            model.addRow(row);
        }
    }
    
    private Boolean validation() {
        if(nameJTextField.getText().equals("")) {
         JOptionPane.showMessageDialog(null, "Fill in the network field. It should not be empty", "Empty Text", JOptionPane.WARNING_MESSAGE);
         return false;   
        }
        String name = nameJTextField.getText();
        for(int i = 0; i <name.length();i++){
        char c = name.charAt(i);  
        if((c<97 || c>122) && (c<65 || c>90)) {
         JOptionPane.showMessageDialog(null, "Network Name field should contain only alphabet", "Mismatch", JOptionPane.WARNING_MESSAGE);
         return false;
        }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        nameJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        deleteNetworkJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        networkJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 404, 91));

        submitJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submitJButton.setText("Submit >>");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 246, 130, 30));

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 246, 130, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 246, 80, 30));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 325, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("MANAGE NETWORK PANEL");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 350, 26));

        deleteNetworkJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteNetworkJButton.setText("Delete Network >>");
        deleteNetworkJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteNetworkJButtonActionPerformed(evt);
            }
        });
        add(deleteNetworkJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 323, 190, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Boolean flag = validation();
        if(flag) {
            
        String name = nameJTextField.getText();

        for(Network n : system.getNetworkList()) {
            if (n.getName().equals(name)) {
                JOptionPane.showMessageDialog(null, "Network name already exists. Please use different name");
                return;
            }
        }
        Network network = system.createAndAddNetwork();
        network.setName(name);

        populateNetworkTable();
        
        nameJTextField.setText("");
        
        JOptionPane.showMessageDialog(null, "Network has been created successfully", "Success", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void deleteNetworkJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteNetworkJButtonActionPerformed
        
        int selectedRow = networkJTable.getSelectedRow();
        if(selectedRow>=0){
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Warning", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                Network network  =(Network)networkJTable.getValueAt(selectedRow,0);
                system.deleteNetwork(network);
                populateNetworkTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Please select a Network to delete");
        }
        
    }//GEN-LAST:event_deleteNetworkJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteNetworkJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTable networkJTable;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
