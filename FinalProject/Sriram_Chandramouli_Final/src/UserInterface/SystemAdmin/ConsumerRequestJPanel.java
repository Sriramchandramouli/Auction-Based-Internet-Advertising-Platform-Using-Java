/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdmin;

import Business.Consumer.Consumer;
import Business.Consumer.ConsumerDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.ConsumerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SignUpRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sriram
 */
public class ConsumerRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount userAccount;
    ConsumerDirectory consumerDirectory;
    Organization organization;
    EcoSystem system;
    
    public ConsumerRequestJPanel(JPanel upc, UserAccount userAccount, EcoSystem system) {
        initComponents();
        this.userProcessContainer = upc;
        this.userAccount = userAccount;
        this.system = system;
        
        populateConsumerRequest();
    }
    
    private void populateConsumerRequest() {
        
        DefaultTableModel dtm = (DefaultTableModel) consumerWorkRequestJTable.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList()) {
            SignUpRequest consReq = (SignUpRequest) wr;
            Object row[] = new Object[4];
            row[0] = consReq;
            row[1] = wr.getMessage();
            row[2] = consReq.getSignUpResult();
            Consumer consumer = consReq.getConsumer();
            row[3] = (consumer == null) ? ("N/A") : (consumer);
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        consumerWorkRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processConsumerJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        consumerWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserName", "Message", "SignUp Status", "Consumer Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(consumerWorkRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 102, 395, 90));

        assignJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignJButton.setText("Assign >>");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 256, -1, 32));

        processConsumerJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        processConsumerJButton.setText("Process >>");
        processConsumerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processConsumerJButtonActionPerformed(evt);
            }
        });
        add(processConsumerJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(399, 256, -1, 32));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 383, 115, 33));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("CONSUMER REQUEST PANEL");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 350, 25));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Delete Consumer >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 370, -1, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        int selectedRow = consumerWorkRequestJTable.getSelectedRow();
        if(selectedRow >= 0) {
            SignUpRequest consReq = (SignUpRequest)consumerWorkRequestJTable.getValueAt(selectedRow, 0);
            
            if(consReq.getMessage().equals("Approved")) {
                JOptionPane.showMessageDialog(null, "The request has been already completed");
                return;
            }
            
            if ((!consReq.getMessage().equals("Processing")))  {
            consReq.setMessage("Processing");
            consReq.setSignUpResult("In-Progress");
            
            populateConsumerRequest();
            JOptionPane.showMessageDialog(null, "The request has been assigned.");
            
            } else {
                JOptionPane.showMessageDialog(null, "The request has been assigned already");
            }
        
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select a request to assign");
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processConsumerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processConsumerJButtonActionPerformed
        
        int selectedRow = consumerWorkRequestJTable.getSelectedRow();
        if(selectedRow >= 0) {
            SignUpRequest consReq = (SignUpRequest) consumerWorkRequestJTable.getValueAt(selectedRow, 0);
            if((consReq.getMessage().equals("Please approve")) || (consReq.getSignUpResult().equals("Sent"))) {
            
                JOptionPane.showMessageDialog(null, "Please assign the request before processing");
                return;
        } else if ((consReq.getMessage().equals("Approved")) || (consReq.getSignUpResult().equals("Completed"))) {
               
                JOptionPane.showMessageDialog(null, "The request has been processed already");
                return;
        }
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to process", "Warning", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                    ConsumerOrganization consumerOrganization;
        for (Network network : system.getNetworkList()) {
            if(network.getName().equals(consReq.getNetwork().getName())) {
          for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {  
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if(org.getName().equals(Organization.Type.Consumer.getValue())) {
                
                organization = org;
                consumerOrganization = (ConsumerOrganization) org;
                 consumerDirectory = consumerOrganization.getConsumerDirectory();
                 
                 
           
                    Consumer consumer = consumerDirectory.addConsumer();
                    consumer.setFirstName(consReq.getFirstName());
                    consumer.setLastName(consReq.getLastName());
                    consumer.setAge(consReq.getAge());
                    consumer.setCategory1(consReq.getCategory1());
                    consumer.setCategory2(consReq.getCategory2());
                    consumer.setCategory3(consReq.getCategory3());
                    consumer.setLine1Address(consReq.getLine1Address());
                    consumer.setLine2Address(consReq.getLine2Address());
                    consumer.setCity(consReq.getCity());
                    consumer.setZipCode(consReq.getZipCode());
                    consumer.setState(consReq.getState());
                    consumer.setNetwork(consReq.getNetwork());
                    
                    consReq.setMessage("Approved");
                    consReq.setSignUpResult("Completed");
                    consReq.setConsumer(consumer);
                   
                    
                    System.out.println(consumer.getCategory1());
                    System.out.println(consumer.getCategory2());
                    System.out.println(consumer.getCategory3());
                    
                    
                    organization.getUserAccountDirectory().createConsumerAccount(consReq.getUserName(), consReq.getPassWord(), consumer, consReq.getRole());
                    for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                        if(ua.getUserName().equals(consReq.getUserName())) {
                            ua.getFinanceDetail().setName(consReq.getFirstName());
                            ua.getFinanceDetail().setCardNumber(consReq.getCardNumber());
                            ua.getFinanceDetail().setExpiryDate(consReq.getExpDate());
                            ua.getFinanceDetail().setCvvNumber(consReq.getCvvNumber());
                            ua.getFinanceDetail().setBalance(consReq.getBalance());
                            
                        }
                    }
            } 
             }
        }
          }
        }
            }else if(option == JOptionPane.NO_OPTION) {
                    consReq.setMessage("Not Approved");
                    consReq.setSignUpResult("Incomplete");
            }
       /*     for(WorkRequest wr : adminOrganization1.getWorkQueue().getWorkRequestList()) {
                SignUpRequest req = (SignUpRequest) wr;
                if(consReq.getUserName().equals(req.getUserName())) {
                    JOptionPane.showMessageDialog(null, "UserName already exists");
                    wr.setMessage("Please use another UserName");
                    consReq.setSignUpResult("Not Approved");
                    
                } else { */
                  //  wr.setMessage("Approved");
                 //   consReq.setMessage("Approved");
                 //   consReq.setSignUpResult("Completed");
       //         }
       //     }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a request to process"); 
        }
        populateConsumerRequest();
    }//GEN-LAST:event_processConsumerJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = consumerWorkRequestJTable.getSelectedRow();
        if(selectedRow>=0){
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Warning", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                Consumer consumer  =(Consumer)consumerWorkRequestJTable.getValueAt(selectedRow,3);
//                UserAccount ua = (UserAccount)consumerWorkRequestJTable.getValueAt(selectedRow, 0);
          
              for(WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList()) {
                  SignUpRequest consReq = (SignUpRequest) wr;
                for (UserAccount ua1 : organization.getUserAccountDirectory().getUserAccountList()) {
                if(ua1.getUserName().equals(consReq.getUserName())) {
                    organization.getUserAccountDirectory().deleteUserAccount(ua1);
                    userAccount.getWorkQueue().deleteWorkRequest(wr);
                    
                    
                }
            }
              }
               consumerDirectory.removeConsumer(consumer);
               populateConsumerRequest();
               JOptionPane.showMessageDialog(null, "The Consumer hs been deleted.");
                    return;
        //        organization.getUserAccountDirectory().deleteUserAccount(ua);
               
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Please select a UserAccount to delete");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable consumerWorkRequestJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processConsumerJButton;
    // End of variables declaration//GEN-END:variables
}
