/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdvertiserRole;

import Business.Adspace.Adspace;
import Business.Advertisement.Advertisement;
import Business.Advertiser.Advertiser;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PublisherOrganization;
import Business.Publisher.Publisher;
import Business.Publisher.PublisherDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdExchangeRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sriram
 */
public class AdvertisementExchangeJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    PublisherDirectory publisherDirectory;
    Advertiser advertiser;
    UserAccount userAccount;
    Enterprise enterprise;
    PublisherOrganization publisherOrganization;
    
    public AdvertisementExchangeJPanel(JPanel upc, PublisherDirectory publisherDirectory, Advertiser advertiser, UserAccount userAccount, Enterprise enterprise, PublisherOrganization publisherOrganization) {
        initComponents();
        this.userProcessContainer = upc;
        this.publisherDirectory = publisherDirectory;
        this.advertiser = advertiser;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.publisherOrganization = publisherOrganization;
        populatePublisherCombobox();
        populateAdvertisementCombobox();
        displayEnrollRequest();
    }
    
    private void populatePublisherCombobox() {
        
        publisherJComboBox.removeAllItems();
        for (Publisher publisher : publisherDirectory.getPublisherList()) {
            publisherJComboBox.addItem(publisher);
        }
     
    }
    
    private void populateAdSpaceCombobox(Publisher p) {
        
       adSpaceJComboBox.removeAllItems();
          for (Adspace adspace : p.getAdspaceCatalog().getAdspaceList()) {
                adSpaceJComboBox.addItem(adspace);
            }
   //     }
    }
    
    private void populateAdvertisementCombobox() {
        advertisementJComboBox.removeAllItems();
        for (Advertisement advertisement : advertiser.getAdvertisementCatalog().getAdvertisementList()) {
            advertisementJComboBox.addItem(advertisement);
        }
    }
    
    private void displayEnrollRequest() {
        
        DefaultTableModel dtm = (DefaultTableModel)biddingRequestJTable.getModel();
        dtm.setRowCount(0);
        
            for(WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList()) {
                AdExchangeRequest enrollReq = (AdExchangeRequest) wr;
            Object row[] = new Object[6];
            row[0] = enrollReq.getPublisher();
            row[1] = enrollReq.getAdSpace();
            row[2] = enrollReq.getBidRate();
            row[3] = enrollReq.getAdvertisement();
            row[4] = wr;
            row[5] = enrollReq.getAdvertisement().getProduct().getProductName();
            dtm.addRow(row);
       
       }
    }
    
    private Boolean validation() {
        
        String rate = bidRateJTextField.getText();
        for(int i = 0; i <rate.length();i++){
        char c = rate.charAt(i);  
        if((c!=46 && c<48) || c>57 ) {
         JOptionPane.showMessageDialog(null, "Bidrate field should contain only number and dot", "Mismatch", JOptionPane.WARNING_MESSAGE);
         return false;
        }
        }
        return true;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        publisherJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        adSpaceJComboBox = new javax.swing.JComboBox();
        bidJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        biddingRequestJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        bidRateJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        advertisementJComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Publisher");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 236, 112, 30));

        publisherJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        publisherJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherJComboBoxActionPerformed(evt);
            }
        });
        add(publisherJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 236, 240, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("AdSpace");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 292, 112, 30));

        adSpaceJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adSpaceJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adSpaceJComboBoxActionPerformed(evt);
            }
        });
        add(adSpaceJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 292, 240, 30));

        bidJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bidJButton.setText("Place Bid >>");
        bidJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidJButtonActionPerformed(evt);
            }
        });
        add(bidJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(439, 505, 157, 30));

        biddingRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Publisher", "AdSpace", "Bid Rate", "Advertisement", "Message", "ProductName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(biddingRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 99, 450, 97));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 505, 105, 33));

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 505, 93, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("BidRate");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 412, 112, 29));

        bidRateJTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(bidRateJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 412, 240, 29));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Advertisement");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 352, -1, 31));

        advertisementJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(advertisementJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 352, 240, 31));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("ADVERTISEMENT EXCHANGE PANEL");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 34, 317, 25));
    }// </editor-fold>//GEN-END:initComponents

    private void publisherJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherJComboBoxActionPerformed
        Publisher publisher = (Publisher) publisherJComboBox.getSelectedItem();
      
        if (publisher!=null) 
            populateAdSpaceCombobox(publisher);
        
    }//GEN-LAST:event_publisherJComboBoxActionPerformed

    private void adSpaceJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adSpaceJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adSpaceJComboBoxActionPerformed

    private void bidJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidJButtonActionPerformed
      
        try {
            Boolean flag = validation();
        if(flag) {
        
     
            Publisher publisher = (Publisher) publisherJComboBox.getSelectedItem();
            float rate = Float.parseFloat(bidRateJTextField.getText());
            
            Adspace space = (Adspace) adSpaceJComboBox.getSelectedItem();
         
            Advertisement advertisement = (Advertisement) advertisementJComboBox.getSelectedItem();
            
            if( publisher == null || space == null || advertisement == null || (bidRateJTextField.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "All the fields are not filled/created. Please have missing fields created or filled");
                return;
       
            }
            
            for(WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList()) {
            AdExchangeRequest enrollReq = (AdExchangeRequest) wr;
         //   Publisher publisher = (Publisher) publisherJComboBox.getSelectedItem();
         //   String space = String.valueOf(adSpaceJComboBox.getSelectedItem());
           if((enrollReq.getAdvertisement().getProduct().getCategory().equals(advertisement.getProduct().getCategory())) && (enrollReq.getPublisher().equals(publisher)) && (enrollReq.getAdSpace().getSpaceName().equals(space.getSpaceName())) && ((wr.getStatus().equals("Waiting")))) {
               JOptionPane.showMessageDialog(null, "You have already placed bid for the Adspace. Please place another bid once your current bid is completed");
               return;    
           } 
        } 
            
            for(Adspace adspace : publisher.getAdspaceCatalog().getAdspaceList()) {
           
            if(rate <= adspace.getBasePrice()) {
                JOptionPane.showMessageDialog(null, "Bid value is less than or equal to base price");
                return;
            }
            }
            
            float maxVal = 0;
            for(WorkRequest wr : publisherOrganization.getWorkQueue().getWorkRequestList()) {
                AdExchangeRequest enrollReq = (AdExchangeRequest) wr;
                if((enrollReq.getAdvertisement().getProduct().getCategory().equals(advertisement.getProduct().getCategory())) && (enrollReq.getPublisher().equals(publisher))) {
               System.out.println("The val of category" + enrollReq.getAdvertisement().getProduct().getCategory());
                System.out.println("The val of category1" + String.valueOf(advertisementJComboBox.getSelectedItem()));
                    if (enrollReq.getBidRate() > maxVal) {
                    maxVal = (float) enrollReq.getBidRate();
                }
            }
            }
                
                if(rate == maxVal) {
                 int option = JOptionPane.showConfirmDialog(null, "Bid value same as other bidders, Would you like to place higher bid", "Warning", JOptionPane.YES_NO_OPTION);
                
                 if (option == JOptionPane.YES_OPTION) {
                     
                     JOptionPane.showMessageDialog(null, "Please Continue to place higher bid value");
                     return;
                     
                 } else if(option == JOptionPane.NO_OPTION) {
                     
                    
                     
                    AdExchangeRequest aer = new AdExchangeRequest();
            
          //          Adspace space = (Adspace) adSpaceJComboBox.getSelectedItem();
            
          //          Advertisement advertisement = (Advertisement) advertisementJComboBox.getSelectedItem();
                             aer.setBidRate(rate);
                             aer.setSender(userAccount);
                             aer.setStatus("Waiting");
                             aer.setEnrollResult("Sent");
                             aer.setPublisher(publisher);
                             aer.setAdSpace(space);
                             aer.setAdvertisement(advertisement);
                             aer.setMessage("Please Approve");

                    Organization foundOrg = null;
                    for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if(org instanceof PublisherOrganization) {
                    foundOrg = org;
                    break;
                    }
                    }
                    if(foundOrg !=null) {
                    foundOrg.getWorkQueue().getWorkRequestList().add(aer);
                    userAccount.getWorkQueue().getWorkRequestList().add(aer);
                    } else {
                    JOptionPane.showMessageDialog(null, "Please create a Publisher organization before sending enroll request");
                    return;
                    }
                    displayEnrollRequest();
                     JOptionPane.showMessageDialog(null, "You are placing same value. You will be out of bidding race");
                     return;
                 }
                 
                 
                }
            

            AdExchangeRequest aer = new AdExchangeRequest();
            
    //        Adspace space = (Adspace) adSpaceJComboBox.getSelectedItem();
         
    //        Advertisement advertisement = (Advertisement) advertisementJComboBox.getSelectedItem();
            
            
            aer.setBidRate(rate);
            aer.setSender(userAccount);
            aer.setStatus("Waiting");
            aer.setEnrollResult("Sent");
            aer.setPublisher(publisher);
            aer.setAdSpace(space);
            aer.setAdvertisement(advertisement);
            aer.setMessage("Please Approve");

            Organization foundOrg = null;
            for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if(org instanceof PublisherOrganization) {
                    foundOrg = org;
                    break;
                }
            }
            if(foundOrg !=null) {
                foundOrg.getWorkQueue().getWorkRequestList().add(aer);
                userAccount.getWorkQueue().getWorkRequestList().add(aer);
            } else {
                JOptionPane.showMessageDialog(null, "Please create a Publisher organization before sending enroll request");
                return;
            }
    
            bidRateJTextField.setText("");
            displayEnrollRequest();
            
        }
            
      } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter valid number/fields. Some fields might be empty.");
        }
        
    }//GEN-LAST:event_bidJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
    
        displayEnrollRequest();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox adSpaceJComboBox;
    private javax.swing.JComboBox advertisementJComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton bidJButton;
    private javax.swing.JTextField bidRateJTextField;
    private javax.swing.JTable biddingRequestJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox publisherJComboBox;
    private javax.swing.JButton refreshJButton;
    // End of variables declaration//GEN-END:variables
}
