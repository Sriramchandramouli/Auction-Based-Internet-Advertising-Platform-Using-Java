/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplierRole;

import Business.Product.Product;
import Business.Supplier.Supplier;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sriram
 */
public class CreateNewProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewProductJPanel
     */
    JPanel userProcessContainer;
    Supplier supplier;
    public CreateNewProductJPanel(JPanel upc, Supplier supplier) {
        initComponents();
        this.userProcessContainer=upc;
        this.supplier=supplier;
    }
    
    private Boolean validation() {
        if(nameField1.getText().equals("") || priceField1.getText().equals("") || availabilityField1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Fill in all the fields", "Empty Text", JOptionPane.WARNING_MESSAGE);
         return false;
        }
        String prodName = nameField1.getText();
        for(int i = 0; i <prodName.length();i++){
        char c = prodName.charAt(i);  
        if((c<97 || c>122) && (c<65 || c>90) && (c<48 || c>57)) {
         JOptionPane.showMessageDialog(null, "Product Name field should contain only alphabet/number", "Mismatch", JOptionPane.WARNING_MESSAGE);
         return false;
        }
        }
        String prodPrice = priceField1.getText();
        for(int i = 0; i <prodPrice.length();i++){
        char c = prodPrice.charAt(i);  
        if((c!=46 && c<48) || c>57 ) {
         JOptionPane.showMessageDialog(null, "Product price should contain only number and dot", "Mismatch", JOptionPane.WARNING_MESSAGE);
         return false;
        }
        }
        String avail = availabilityField1.getText();
        for(int i = 0; i <avail.length();i++){
        char c = avail.charAt(i);  
        if((c<48 || c>57))  {
         JOptionPane.showMessageDialog(null, "Availability field should contain only number", "Mismatch", JOptionPane.WARNING_MESSAGE);
         return false;
        }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createProductNameJLabel = new javax.swing.JLabel();
        nameField1 = new javax.swing.JTextField();
        createProductIDJLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        createProductPriceJLabel = new javax.swing.JLabel();
        priceField1 = new javax.swing.JTextField();
        createAvailabilityJLabel = new javax.swing.JLabel();
        availabilityField1 = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        addProductJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("CREATE NEW PRODUCT");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 36, -1, -1));

        createProductNameJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createProductNameJLabel.setText("Product Name:");
        add(createProductNameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 106, -1, 30));

        nameField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(nameField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 106, 210, -1));

        createProductIDJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createProductIDJLabel.setText("Product ID:");
        add(createProductIDJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 146, 117, 30));

        idField.setEditable(false);
        idField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 145, 210, -1));

        createProductPriceJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createProductPriceJLabel.setText("Product Price:");
        add(createProductPriceJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 196, 117, 30));

        priceField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(priceField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 191, 210, 30));

        createAvailabilityJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createAvailabilityJLabel.setText("Availability:");
        add(createAvailabilityJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 246, 116, 30));

        availabilityField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(availabilityField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 244, 210, 30));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 336, 116, 32));

        addProductJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addProductJButton.setText("Add Product >>");
        addProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductJButtonActionPerformed(evt);
            }
        });
        add(addProductJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, -1, 32));
    }// </editor-fold>//GEN-END:initComponents

    private void addProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductJButtonActionPerformed
        Boolean flag = validation();
        if(flag) {
        Product product = supplier.getProductCatalog().addProduct();
        String prodName = nameField1.getText();
        Float prodPrice = Float.parseFloat(priceField1.getText());
        int availability = Integer.parseInt(availabilityField1.getText());
        product.setProductName(prodName);
        product.setPrice(prodPrice);
        product.setAvailability(availability);
        product.setProductName(nameField1.getText());

        nameField1.setText("");
        priceField1.setText("");
        availabilityField1.setText("");
        }
    }//GEN-LAST:event_addProductJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductJButton;
    private javax.swing.JTextField availabilityField1;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel createAvailabilityJLabel;
    private javax.swing.JLabel createProductIDJLabel;
    private javax.swing.JLabel createProductNameJLabel;
    private javax.swing.JLabel createProductPriceJLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameField1;
    private javax.swing.JTextField priceField1;
    // End of variables declaration//GEN-END:variables
}
